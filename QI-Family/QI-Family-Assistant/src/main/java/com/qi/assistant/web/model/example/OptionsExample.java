package com.qi.assistant.web.model.example;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OptionsExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    public OptionsExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    protected OptionsExample(OptionsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_family_options
     *
     * @ibatorgenerated Wed Jul 27 11:18:56 GMT+08:00 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andGuidIsNull() {
            addCriterion("Guid is null");
            return this;
        }

        public Criteria andGuidIsNotNull() {
            addCriterion("Guid is not null");
            return this;
        }

        public Criteria andGuidEqualTo(Long value) {
            addCriterion("Guid =", value, "guid");
            return this;
        }

        public Criteria andGuidNotEqualTo(Long value) {
            addCriterion("Guid <>", value, "guid");
            return this;
        }

        public Criteria andGuidGreaterThan(Long value) {
            addCriterion("Guid >", value, "guid");
            return this;
        }

        public Criteria andGuidGreaterThanOrEqualTo(Long value) {
            addCriterion("Guid >=", value, "guid");
            return this;
        }

        public Criteria andGuidLessThan(Long value) {
            addCriterion("Guid <", value, "guid");
            return this;
        }

        public Criteria andGuidLessThanOrEqualTo(Long value) {
            addCriterion("Guid <=", value, "guid");
            return this;
        }

        public Criteria andGuidIn(List values) {
            addCriterion("Guid in", values, "guid");
            return this;
        }

        public Criteria andGuidNotIn(List values) {
            addCriterion("Guid not in", values, "guid");
            return this;
        }

        public Criteria andGuidBetween(Long value1, Long value2) {
            addCriterion("Guid between", value1, value2, "guid");
            return this;
        }

        public Criteria andGuidNotBetween(Long value1, Long value2) {
            addCriterion("Guid not between", value1, value2, "guid");
            return this;
        }

        public Criteria andOptionstypeIsNull() {
            addCriterion("OptionsType is null");
            return this;
        }

        public Criteria andOptionstypeIsNotNull() {
            addCriterion("OptionsType is not null");
            return this;
        }

        public Criteria andOptionstypeEqualTo(String value) {
            addCriterion("OptionsType =", value, "optionstype");
            return this;
        }

        public Criteria andOptionstypeNotEqualTo(String value) {
            addCriterion("OptionsType <>", value, "optionstype");
            return this;
        }

        public Criteria andOptionstypeGreaterThan(String value) {
            addCriterion("OptionsType >", value, "optionstype");
            return this;
        }

        public Criteria andOptionstypeGreaterThanOrEqualTo(String value) {
            addCriterion("OptionsType >=", value, "optionstype");
            return this;
        }

        public Criteria andOptionstypeLessThan(String value) {
            addCriterion("OptionsType <", value, "optionstype");
            return this;
        }

        public Criteria andOptionstypeLessThanOrEqualTo(String value) {
            addCriterion("OptionsType <=", value, "optionstype");
            return this;
        }

        public Criteria andOptionstypeLike(String value) {
            addCriterion("OptionsType like", value, "optionstype");
            return this;
        }

        public Criteria andOptionstypeNotLike(String value) {
            addCriterion("OptionsType not like", value, "optionstype");
            return this;
        }

        public Criteria andOptionstypeIn(List values) {
            addCriterion("OptionsType in", values, "optionstype");
            return this;
        }

        public Criteria andOptionstypeNotIn(List values) {
            addCriterion("OptionsType not in", values, "optionstype");
            return this;
        }

        public Criteria andOptionstypeBetween(String value1, String value2) {
            addCriterion("OptionsType between", value1, value2, "optionstype");
            return this;
        }

        public Criteria andOptionstypeNotBetween(String value1, String value2) {
            addCriterion("OptionsType not between", value1, value2, "optionstype");
            return this;
        }

        public Criteria andIntervaltypeIsNull() {
            addCriterion("IntervalType is null");
            return this;
        }

        public Criteria andIntervaltypeIsNotNull() {
            addCriterion("IntervalType is not null");
            return this;
        }

        public Criteria andIntervaltypeEqualTo(Integer value) {
            addCriterion("IntervalType =", value, "intervaltype");
            return this;
        }

        public Criteria andIntervaltypeNotEqualTo(Integer value) {
            addCriterion("IntervalType <>", value, "intervaltype");
            return this;
        }

        public Criteria andIntervaltypeGreaterThan(Integer value) {
            addCriterion("IntervalType >", value, "intervaltype");
            return this;
        }

        public Criteria andIntervaltypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("IntervalType >=", value, "intervaltype");
            return this;
        }

        public Criteria andIntervaltypeLessThan(Integer value) {
            addCriterion("IntervalType <", value, "intervaltype");
            return this;
        }

        public Criteria andIntervaltypeLessThanOrEqualTo(Integer value) {
            addCriterion("IntervalType <=", value, "intervaltype");
            return this;
        }

        public Criteria andIntervaltypeIn(List values) {
            addCriterion("IntervalType in", values, "intervaltype");
            return this;
        }

        public Criteria andIntervaltypeNotIn(List values) {
            addCriterion("IntervalType not in", values, "intervaltype");
            return this;
        }

        public Criteria andIntervaltypeBetween(Integer value1, Integer value2) {
            addCriterion("IntervalType between", value1, value2, "intervaltype");
            return this;
        }

        public Criteria andIntervaltypeNotBetween(Integer value1, Integer value2) {
            addCriterion("IntervalType not between", value1, value2, "intervaltype");
            return this;
        }

        public Criteria andIntervaldateIsNull() {
            addCriterion("IntervalDate is null");
            return this;
        }

        public Criteria andIntervaldateIsNotNull() {
            addCriterion("IntervalDate is not null");
            return this;
        }

        public Criteria andIntervaldateEqualTo(Integer value) {
            addCriterion("IntervalDate =", value, "intervaldate");
            return this;
        }

        public Criteria andIntervaldateNotEqualTo(Integer value) {
            addCriterion("IntervalDate <>", value, "intervaldate");
            return this;
        }

        public Criteria andIntervaldateGreaterThan(Integer value) {
            addCriterion("IntervalDate >", value, "intervaldate");
            return this;
        }

        public Criteria andIntervaldateGreaterThanOrEqualTo(Integer value) {
            addCriterion("IntervalDate >=", value, "intervaldate");
            return this;
        }

        public Criteria andIntervaldateLessThan(Integer value) {
            addCriterion("IntervalDate <", value, "intervaldate");
            return this;
        }

        public Criteria andIntervaldateLessThanOrEqualTo(Integer value) {
            addCriterion("IntervalDate <=", value, "intervaldate");
            return this;
        }

        public Criteria andIntervaldateIn(List values) {
            addCriterion("IntervalDate in", values, "intervaldate");
            return this;
        }

        public Criteria andIntervaldateNotIn(List values) {
            addCriterion("IntervalDate not in", values, "intervaldate");
            return this;
        }

        public Criteria andIntervaldateBetween(Integer value1, Integer value2) {
            addCriterion("IntervalDate between", value1, value2, "intervaldate");
            return this;
        }

        public Criteria andIntervaldateNotBetween(Integer value1, Integer value2) {
            addCriterion("IntervalDate not between", value1, value2, "intervaldate");
            return this;
        }

        public Criteria andEmployeIsNull() {
            addCriterion("Employe is null");
            return this;
        }

        public Criteria andEmployeIsNotNull() {
            addCriterion("Employe is not null");
            return this;
        }

        public Criteria andEmployeEqualTo(String value) {
            addCriterion("Employe =", value, "employe");
            return this;
        }

        public Criteria andEmployeNotEqualTo(String value) {
            addCriterion("Employe <>", value, "employe");
            return this;
        }

        public Criteria andEmployeGreaterThan(String value) {
            addCriterion("Employe >", value, "employe");
            return this;
        }

        public Criteria andEmployeGreaterThanOrEqualTo(String value) {
            addCriterion("Employe >=", value, "employe");
            return this;
        }

        public Criteria andEmployeLessThan(String value) {
            addCriterion("Employe <", value, "employe");
            return this;
        }

        public Criteria andEmployeLessThanOrEqualTo(String value) {
            addCriterion("Employe <=", value, "employe");
            return this;
        }

        public Criteria andEmployeLike(String value) {
            addCriterion("Employe like", value, "employe");
            return this;
        }

        public Criteria andEmployeNotLike(String value) {
            addCriterion("Employe not like", value, "employe");
            return this;
        }

        public Criteria andEmployeIn(List values) {
            addCriterion("Employe in", values, "employe");
            return this;
        }

        public Criteria andEmployeNotIn(List values) {
            addCriterion("Employe not in", values, "employe");
            return this;
        }

        public Criteria andEmployeBetween(String value1, String value2) {
            addCriterion("Employe between", value1, value2, "employe");
            return this;
        }

        public Criteria andEmployeNotBetween(String value1, String value2) {
            addCriterion("Employe not between", value1, value2, "employe");
            return this;
        }

        public Criteria andGradeIsNull() {
            addCriterion("Grade is null");
            return this;
        }

        public Criteria andGradeIsNotNull() {
            addCriterion("Grade is not null");
            return this;
        }

        public Criteria andGradeEqualTo(Integer value) {
            addCriterion("Grade =", value, "grade");
            return this;
        }

        public Criteria andGradeNotEqualTo(Integer value) {
            addCriterion("Grade <>", value, "grade");
            return this;
        }

        public Criteria andGradeGreaterThan(Integer value) {
            addCriterion("Grade >", value, "grade");
            return this;
        }

        public Criteria andGradeGreaterThanOrEqualTo(Integer value) {
            addCriterion("Grade >=", value, "grade");
            return this;
        }

        public Criteria andGradeLessThan(Integer value) {
            addCriterion("Grade <", value, "grade");
            return this;
        }

        public Criteria andGradeLessThanOrEqualTo(Integer value) {
            addCriterion("Grade <=", value, "grade");
            return this;
        }

        public Criteria andGradeIn(List values) {
            addCriterion("Grade in", values, "grade");
            return this;
        }

        public Criteria andGradeNotIn(List values) {
            addCriterion("Grade not in", values, "grade");
            return this;
        }

        public Criteria andGradeBetween(Integer value1, Integer value2) {
            addCriterion("Grade between", value1, value2, "grade");
            return this;
        }

        public Criteria andGradeNotBetween(Integer value1, Integer value2) {
            addCriterion("Grade not between", value1, value2, "grade");
            return this;
        }

        public Criteria andQuantityIsNull() {
            addCriterion("Quantity is null");
            return this;
        }

        public Criteria andQuantityIsNotNull() {
            addCriterion("Quantity is not null");
            return this;
        }

        public Criteria andQuantityEqualTo(Integer value) {
            addCriterion("Quantity =", value, "quantity");
            return this;
        }

        public Criteria andQuantityNotEqualTo(Integer value) {
            addCriterion("Quantity <>", value, "quantity");
            return this;
        }

        public Criteria andQuantityGreaterThan(Integer value) {
            addCriterion("Quantity >", value, "quantity");
            return this;
        }

        public Criteria andQuantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("Quantity >=", value, "quantity");
            return this;
        }

        public Criteria andQuantityLessThan(Integer value) {
            addCriterion("Quantity <", value, "quantity");
            return this;
        }

        public Criteria andQuantityLessThanOrEqualTo(Integer value) {
            addCriterion("Quantity <=", value, "quantity");
            return this;
        }

        public Criteria andQuantityIn(List values) {
            addCriterion("Quantity in", values, "quantity");
            return this;
        }

        public Criteria andQuantityNotIn(List values) {
            addCriterion("Quantity not in", values, "quantity");
            return this;
        }

        public Criteria andQuantityBetween(Integer value1, Integer value2) {
            addCriterion("Quantity between", value1, value2, "quantity");
            return this;
        }

        public Criteria andQuantityNotBetween(Integer value1, Integer value2) {
            addCriterion("Quantity not between", value1, value2, "quantity");
            return this;
        }

        public Criteria andAmendIsNull() {
            addCriterion("Amend is null");
            return this;
        }

        public Criteria andAmendIsNotNull() {
            addCriterion("Amend is not null");
            return this;
        }

        public Criteria andAmendEqualTo(Integer value) {
            addCriterion("Amend =", value, "amend");
            return this;
        }

        public Criteria andAmendNotEqualTo(Integer value) {
            addCriterion("Amend <>", value, "amend");
            return this;
        }

        public Criteria andAmendGreaterThan(Integer value) {
            addCriterion("Amend >", value, "amend");
            return this;
        }

        public Criteria andAmendGreaterThanOrEqualTo(Integer value) {
            addCriterion("Amend >=", value, "amend");
            return this;
        }

        public Criteria andAmendLessThan(Integer value) {
            addCriterion("Amend <", value, "amend");
            return this;
        }

        public Criteria andAmendLessThanOrEqualTo(Integer value) {
            addCriterion("Amend <=", value, "amend");
            return this;
        }

        public Criteria andAmendIn(List values) {
            addCriterion("Amend in", values, "amend");
            return this;
        }

        public Criteria andAmendNotIn(List values) {
            addCriterion("Amend not in", values, "amend");
            return this;
        }

        public Criteria andAmendBetween(Integer value1, Integer value2) {
            addCriterion("Amend between", value1, value2, "amend");
            return this;
        }

        public Criteria andAmendNotBetween(Integer value1, Integer value2) {
            addCriterion("Amend not between", value1, value2, "amend");
            return this;
        }

        public Criteria andPriceoneIsNull() {
            addCriterion("PriceOne is null");
            return this;
        }

        public Criteria andPriceoneIsNotNull() {
            addCriterion("PriceOne is not null");
            return this;
        }

        public Criteria andPriceoneEqualTo(BigDecimal value) {
            addCriterion("PriceOne =", value, "priceone");
            return this;
        }

        public Criteria andPriceoneNotEqualTo(BigDecimal value) {
            addCriterion("PriceOne <>", value, "priceone");
            return this;
        }

        public Criteria andPriceoneGreaterThan(BigDecimal value) {
            addCriterion("PriceOne >", value, "priceone");
            return this;
        }

        public Criteria andPriceoneGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PriceOne >=", value, "priceone");
            return this;
        }

        public Criteria andPriceoneLessThan(BigDecimal value) {
            addCriterion("PriceOne <", value, "priceone");
            return this;
        }

        public Criteria andPriceoneLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PriceOne <=", value, "priceone");
            return this;
        }

        public Criteria andPriceoneIn(List values) {
            addCriterion("PriceOne in", values, "priceone");
            return this;
        }

        public Criteria andPriceoneNotIn(List values) {
            addCriterion("PriceOne not in", values, "priceone");
            return this;
        }

        public Criteria andPriceoneBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PriceOne between", value1, value2, "priceone");
            return this;
        }

        public Criteria andPriceoneNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PriceOne not between", value1, value2, "priceone");
            return this;
        }

        public Criteria andPricetwoIsNull() {
            addCriterion("PriceTwo is null");
            return this;
        }

        public Criteria andPricetwoIsNotNull() {
            addCriterion("PriceTwo is not null");
            return this;
        }

        public Criteria andPricetwoEqualTo(BigDecimal value) {
            addCriterion("PriceTwo =", value, "pricetwo");
            return this;
        }

        public Criteria andPricetwoNotEqualTo(BigDecimal value) {
            addCriterion("PriceTwo <>", value, "pricetwo");
            return this;
        }

        public Criteria andPricetwoGreaterThan(BigDecimal value) {
            addCriterion("PriceTwo >", value, "pricetwo");
            return this;
        }

        public Criteria andPricetwoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PriceTwo >=", value, "pricetwo");
            return this;
        }

        public Criteria andPricetwoLessThan(BigDecimal value) {
            addCriterion("PriceTwo <", value, "pricetwo");
            return this;
        }

        public Criteria andPricetwoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PriceTwo <=", value, "pricetwo");
            return this;
        }

        public Criteria andPricetwoIn(List values) {
            addCriterion("PriceTwo in", values, "pricetwo");
            return this;
        }

        public Criteria andPricetwoNotIn(List values) {
            addCriterion("PriceTwo not in", values, "pricetwo");
            return this;
        }

        public Criteria andPricetwoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PriceTwo between", value1, value2, "pricetwo");
            return this;
        }

        public Criteria andPricetwoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PriceTwo not between", value1, value2, "pricetwo");
            return this;
        }

        public Criteria andFormulaIsNull() {
            addCriterion("Formula is null");
            return this;
        }

        public Criteria andFormulaIsNotNull() {
            addCriterion("Formula is not null");
            return this;
        }

        public Criteria andFormulaEqualTo(Integer value) {
            addCriterion("Formula =", value, "formula");
            return this;
        }

        public Criteria andFormulaNotEqualTo(Integer value) {
            addCriterion("Formula <>", value, "formula");
            return this;
        }

        public Criteria andFormulaGreaterThan(Integer value) {
            addCriterion("Formula >", value, "formula");
            return this;
        }

        public Criteria andFormulaGreaterThanOrEqualTo(Integer value) {
            addCriterion("Formula >=", value, "formula");
            return this;
        }

        public Criteria andFormulaLessThan(Integer value) {
            addCriterion("Formula <", value, "formula");
            return this;
        }

        public Criteria andFormulaLessThanOrEqualTo(Integer value) {
            addCriterion("Formula <=", value, "formula");
            return this;
        }

        public Criteria andFormulaIn(List values) {
            addCriterion("Formula in", values, "formula");
            return this;
        }

        public Criteria andFormulaNotIn(List values) {
            addCriterion("Formula not in", values, "formula");
            return this;
        }

        public Criteria andFormulaBetween(Integer value1, Integer value2) {
            addCriterion("Formula between", value1, value2, "formula");
            return this;
        }

        public Criteria andFormulaNotBetween(Integer value1, Integer value2) {
            addCriterion("Formula not between", value1, value2, "formula");
            return this;
        }
    }
}