package com.qi.assistant.web.model.example;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GasDetailsExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    public GasDetailsExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    protected GasDetailsExample(GasDetailsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_family_gas_details
     *
     * @ibatorgenerated Fri Aug 05 10:00:11 GMT+08:00 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andGuidIsNull() {
            addCriterion("Guid is null");
            return this;
        }

        public Criteria andGuidIsNotNull() {
            addCriterion("Guid is not null");
            return this;
        }

        public Criteria andGuidEqualTo(Long value) {
            addCriterion("Guid =", value, "guid");
            return this;
        }

        public Criteria andGuidNotEqualTo(Long value) {
            addCriterion("Guid <>", value, "guid");
            return this;
        }

        public Criteria andGuidGreaterThan(Long value) {
            addCriterion("Guid >", value, "guid");
            return this;
        }

        public Criteria andGuidGreaterThanOrEqualTo(Long value) {
            addCriterion("Guid >=", value, "guid");
            return this;
        }

        public Criteria andGuidLessThan(Long value) {
            addCriterion("Guid <", value, "guid");
            return this;
        }

        public Criteria andGuidLessThanOrEqualTo(Long value) {
            addCriterion("Guid <=", value, "guid");
            return this;
        }

        public Criteria andGuidIn(List values) {
            addCriterion("Guid in", values, "guid");
            return this;
        }

        public Criteria andGuidNotIn(List values) {
            addCriterion("Guid not in", values, "guid");
            return this;
        }

        public Criteria andGuidBetween(Long value1, Long value2) {
            addCriterion("Guid between", value1, value2, "guid");
            return this;
        }

        public Criteria andGuidNotBetween(Long value1, Long value2) {
            addCriterion("Guid not between", value1, value2, "guid");
            return this;
        }

        public Criteria andGasguidIsNull() {
            addCriterion("GasGuid is null");
            return this;
        }

        public Criteria andGasguidIsNotNull() {
            addCriterion("GasGuid is not null");
            return this;
        }

        public Criteria andGasguidEqualTo(Long value) {
            addCriterion("GasGuid =", value, "gasguid");
            return this;
        }

        public Criteria andGasguidNotEqualTo(Long value) {
            addCriterion("GasGuid <>", value, "gasguid");
            return this;
        }

        public Criteria andGasguidGreaterThan(Long value) {
            addCriterion("GasGuid >", value, "gasguid");
            return this;
        }

        public Criteria andGasguidGreaterThanOrEqualTo(Long value) {
            addCriterion("GasGuid >=", value, "gasguid");
            return this;
        }

        public Criteria andGasguidLessThan(Long value) {
            addCriterion("GasGuid <", value, "gasguid");
            return this;
        }

        public Criteria andGasguidLessThanOrEqualTo(Long value) {
            addCriterion("GasGuid <=", value, "gasguid");
            return this;
        }

        public Criteria andGasguidIn(List values) {
            addCriterion("GasGuid in", values, "gasguid");
            return this;
        }

        public Criteria andGasguidNotIn(List values) {
            addCriterion("GasGuid not in", values, "gasguid");
            return this;
        }

        public Criteria andGasguidBetween(Long value1, Long value2) {
            addCriterion("GasGuid between", value1, value2, "gasguid");
            return this;
        }

        public Criteria andGasguidNotBetween(Long value1, Long value2) {
            addCriterion("GasGuid not between", value1, value2, "gasguid");
            return this;
        }

        public Criteria andGradeIsNull() {
            addCriterion("Grade is null");
            return this;
        }

        public Criteria andGradeIsNotNull() {
            addCriterion("Grade is not null");
            return this;
        }

        public Criteria andGradeEqualTo(Integer value) {
            addCriterion("Grade =", value, "grade");
            return this;
        }

        public Criteria andGradeNotEqualTo(Integer value) {
            addCriterion("Grade <>", value, "grade");
            return this;
        }

        public Criteria andGradeGreaterThan(Integer value) {
            addCriterion("Grade >", value, "grade");
            return this;
        }

        public Criteria andGradeGreaterThanOrEqualTo(Integer value) {
            addCriterion("Grade >=", value, "grade");
            return this;
        }

        public Criteria andGradeLessThan(Integer value) {
            addCriterion("Grade <", value, "grade");
            return this;
        }

        public Criteria andGradeLessThanOrEqualTo(Integer value) {
            addCriterion("Grade <=", value, "grade");
            return this;
        }

        public Criteria andGradeIn(List values) {
            addCriterion("Grade in", values, "grade");
            return this;
        }

        public Criteria andGradeNotIn(List values) {
            addCriterion("Grade not in", values, "grade");
            return this;
        }

        public Criteria andGradeBetween(Integer value1, Integer value2) {
            addCriterion("Grade between", value1, value2, "grade");
            return this;
        }

        public Criteria andGradeNotBetween(Integer value1, Integer value2) {
            addCriterion("Grade not between", value1, value2, "grade");
            return this;
        }

        public Criteria andGasquantityIsNull() {
            addCriterion("GasQuantity is null");
            return this;
        }

        public Criteria andGasquantityIsNotNull() {
            addCriterion("GasQuantity is not null");
            return this;
        }

        public Criteria andGasquantityEqualTo(Integer value) {
            addCriterion("GasQuantity =", value, "gasquantity");
            return this;
        }

        public Criteria andGasquantityNotEqualTo(Integer value) {
            addCriterion("GasQuantity <>", value, "gasquantity");
            return this;
        }

        public Criteria andGasquantityGreaterThan(Integer value) {
            addCriterion("GasQuantity >", value, "gasquantity");
            return this;
        }

        public Criteria andGasquantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("GasQuantity >=", value, "gasquantity");
            return this;
        }

        public Criteria andGasquantityLessThan(Integer value) {
            addCriterion("GasQuantity <", value, "gasquantity");
            return this;
        }

        public Criteria andGasquantityLessThanOrEqualTo(Integer value) {
            addCriterion("GasQuantity <=", value, "gasquantity");
            return this;
        }

        public Criteria andGasquantityIn(List values) {
            addCriterion("GasQuantity in", values, "gasquantity");
            return this;
        }

        public Criteria andGasquantityNotIn(List values) {
            addCriterion("GasQuantity not in", values, "gasquantity");
            return this;
        }

        public Criteria andGasquantityBetween(Integer value1, Integer value2) {
            addCriterion("GasQuantity between", value1, value2, "gasquantity");
            return this;
        }

        public Criteria andGasquantityNotBetween(Integer value1, Integer value2) {
            addCriterion("GasQuantity not between", value1, value2, "gasquantity");
            return this;
        }

        public Criteria andGaspriceIsNull() {
            addCriterion("GasPrice is null");
            return this;
        }

        public Criteria andGaspriceIsNotNull() {
            addCriterion("GasPrice is not null");
            return this;
        }

        public Criteria andGaspriceEqualTo(BigDecimal value) {
            addCriterion("GasPrice =", value, "gasprice");
            return this;
        }

        public Criteria andGaspriceNotEqualTo(BigDecimal value) {
            addCriterion("GasPrice <>", value, "gasprice");
            return this;
        }

        public Criteria andGaspriceGreaterThan(BigDecimal value) {
            addCriterion("GasPrice >", value, "gasprice");
            return this;
        }

        public Criteria andGaspriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("GasPrice >=", value, "gasprice");
            return this;
        }

        public Criteria andGaspriceLessThan(BigDecimal value) {
            addCriterion("GasPrice <", value, "gasprice");
            return this;
        }

        public Criteria andGaspriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("GasPrice <=", value, "gasprice");
            return this;
        }

        public Criteria andGaspriceIn(List values) {
            addCriterion("GasPrice in", values, "gasprice");
            return this;
        }

        public Criteria andGaspriceNotIn(List values) {
            addCriterion("GasPrice not in", values, "gasprice");
            return this;
        }

        public Criteria andGaspriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("GasPrice between", value1, value2, "gasprice");
            return this;
        }

        public Criteria andGaspriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("GasPrice not between", value1, value2, "gasprice");
            return this;
        }

        public Criteria andGasamountIsNull() {
            addCriterion("GasAmount is null");
            return this;
        }

        public Criteria andGasamountIsNotNull() {
            addCriterion("GasAmount is not null");
            return this;
        }

        public Criteria andGasamountEqualTo(BigDecimal value) {
            addCriterion("GasAmount =", value, "gasamount");
            return this;
        }

        public Criteria andGasamountNotEqualTo(BigDecimal value) {
            addCriterion("GasAmount <>", value, "gasamount");
            return this;
        }

        public Criteria andGasamountGreaterThan(BigDecimal value) {
            addCriterion("GasAmount >", value, "gasamount");
            return this;
        }

        public Criteria andGasamountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("GasAmount >=", value, "gasamount");
            return this;
        }

        public Criteria andGasamountLessThan(BigDecimal value) {
            addCriterion("GasAmount <", value, "gasamount");
            return this;
        }

        public Criteria andGasamountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("GasAmount <=", value, "gasamount");
            return this;
        }

        public Criteria andGasamountIn(List values) {
            addCriterion("GasAmount in", values, "gasamount");
            return this;
        }

        public Criteria andGasamountNotIn(List values) {
            addCriterion("GasAmount not in", values, "gasamount");
            return this;
        }

        public Criteria andGasamountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("GasAmount between", value1, value2, "gasamount");
            return this;
        }

        public Criteria andGasamountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("GasAmount not between", value1, value2, "gasamount");
            return this;
        }
    }
}