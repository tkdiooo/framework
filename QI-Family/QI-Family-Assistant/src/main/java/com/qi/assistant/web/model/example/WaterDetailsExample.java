package com.qi.assistant.web.model.example;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class WaterDetailsExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    public WaterDetailsExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    protected WaterDetailsExample(WaterDetailsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_family_water_details
     *
     * @ibatorgenerated Tue Aug 30 15:25:34 GMT+08:00 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andGuidIsNull() {
            addCriterion("Guid is null");
            return this;
        }

        public Criteria andGuidIsNotNull() {
            addCriterion("Guid is not null");
            return this;
        }

        public Criteria andGuidEqualTo(Long value) {
            addCriterion("Guid =", value, "guid");
            return this;
        }

        public Criteria andGuidNotEqualTo(Long value) {
            addCriterion("Guid <>", value, "guid");
            return this;
        }

        public Criteria andGuidGreaterThan(Long value) {
            addCriterion("Guid >", value, "guid");
            return this;
        }

        public Criteria andGuidGreaterThanOrEqualTo(Long value) {
            addCriterion("Guid >=", value, "guid");
            return this;
        }

        public Criteria andGuidLessThan(Long value) {
            addCriterion("Guid <", value, "guid");
            return this;
        }

        public Criteria andGuidLessThanOrEqualTo(Long value) {
            addCriterion("Guid <=", value, "guid");
            return this;
        }

        public Criteria andGuidIn(List values) {
            addCriterion("Guid in", values, "guid");
            return this;
        }

        public Criteria andGuidNotIn(List values) {
            addCriterion("Guid not in", values, "guid");
            return this;
        }

        public Criteria andGuidBetween(Long value1, Long value2) {
            addCriterion("Guid between", value1, value2, "guid");
            return this;
        }

        public Criteria andGuidNotBetween(Long value1, Long value2) {
            addCriterion("Guid not between", value1, value2, "guid");
            return this;
        }

        public Criteria andWaterguidIsNull() {
            addCriterion("WaterGuid is null");
            return this;
        }

        public Criteria andWaterguidIsNotNull() {
            addCriterion("WaterGuid is not null");
            return this;
        }

        public Criteria andWaterguidEqualTo(Long value) {
            addCriterion("WaterGuid =", value, "waterguid");
            return this;
        }

        public Criteria andWaterguidNotEqualTo(Long value) {
            addCriterion("WaterGuid <>", value, "waterguid");
            return this;
        }

        public Criteria andWaterguidGreaterThan(Long value) {
            addCriterion("WaterGuid >", value, "waterguid");
            return this;
        }

        public Criteria andWaterguidGreaterThanOrEqualTo(Long value) {
            addCriterion("WaterGuid >=", value, "waterguid");
            return this;
        }

        public Criteria andWaterguidLessThan(Long value) {
            addCriterion("WaterGuid <", value, "waterguid");
            return this;
        }

        public Criteria andWaterguidLessThanOrEqualTo(Long value) {
            addCriterion("WaterGuid <=", value, "waterguid");
            return this;
        }

        public Criteria andWaterguidIn(List values) {
            addCriterion("WaterGuid in", values, "waterguid");
            return this;
        }

        public Criteria andWaterguidNotIn(List values) {
            addCriterion("WaterGuid not in", values, "waterguid");
            return this;
        }

        public Criteria andWaterguidBetween(Long value1, Long value2) {
            addCriterion("WaterGuid between", value1, value2, "waterguid");
            return this;
        }

        public Criteria andWaterguidNotBetween(Long value1, Long value2) {
            addCriterion("WaterGuid not between", value1, value2, "waterguid");
            return this;
        }

        public Criteria andGradeIsNull() {
            addCriterion("Grade is null");
            return this;
        }

        public Criteria andGradeIsNotNull() {
            addCriterion("Grade is not null");
            return this;
        }

        public Criteria andGradeEqualTo(Integer value) {
            addCriterion("Grade =", value, "grade");
            return this;
        }

        public Criteria andGradeNotEqualTo(Integer value) {
            addCriterion("Grade <>", value, "grade");
            return this;
        }

        public Criteria andGradeGreaterThan(Integer value) {
            addCriterion("Grade >", value, "grade");
            return this;
        }

        public Criteria andGradeGreaterThanOrEqualTo(Integer value) {
            addCriterion("Grade >=", value, "grade");
            return this;
        }

        public Criteria andGradeLessThan(Integer value) {
            addCriterion("Grade <", value, "grade");
            return this;
        }

        public Criteria andGradeLessThanOrEqualTo(Integer value) {
            addCriterion("Grade <=", value, "grade");
            return this;
        }

        public Criteria andGradeIn(List values) {
            addCriterion("Grade in", values, "grade");
            return this;
        }

        public Criteria andGradeNotIn(List values) {
            addCriterion("Grade not in", values, "grade");
            return this;
        }

        public Criteria andGradeBetween(Integer value1, Integer value2) {
            addCriterion("Grade between", value1, value2, "grade");
            return this;
        }

        public Criteria andGradeNotBetween(Integer value1, Integer value2) {
            addCriterion("Grade not between", value1, value2, "grade");
            return this;
        }

        public Criteria andWaterquantityIsNull() {
            addCriterion("WaterQuantity is null");
            return this;
        }

        public Criteria andWaterquantityIsNotNull() {
            addCriterion("WaterQuantity is not null");
            return this;
        }

        public Criteria andWaterquantityEqualTo(Integer value) {
            addCriterion("WaterQuantity =", value, "waterquantity");
            return this;
        }

        public Criteria andWaterquantityNotEqualTo(Integer value) {
            addCriterion("WaterQuantity <>", value, "waterquantity");
            return this;
        }

        public Criteria andWaterquantityGreaterThan(Integer value) {
            addCriterion("WaterQuantity >", value, "waterquantity");
            return this;
        }

        public Criteria andWaterquantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("WaterQuantity >=", value, "waterquantity");
            return this;
        }

        public Criteria andWaterquantityLessThan(Integer value) {
            addCriterion("WaterQuantity <", value, "waterquantity");
            return this;
        }

        public Criteria andWaterquantityLessThanOrEqualTo(Integer value) {
            addCriterion("WaterQuantity <=", value, "waterquantity");
            return this;
        }

        public Criteria andWaterquantityIn(List values) {
            addCriterion("WaterQuantity in", values, "waterquantity");
            return this;
        }

        public Criteria andWaterquantityNotIn(List values) {
            addCriterion("WaterQuantity not in", values, "waterquantity");
            return this;
        }

        public Criteria andWaterquantityBetween(Integer value1, Integer value2) {
            addCriterion("WaterQuantity between", value1, value2, "waterquantity");
            return this;
        }

        public Criteria andWaterquantityNotBetween(Integer value1, Integer value2) {
            addCriterion("WaterQuantity not between", value1, value2, "waterquantity");
            return this;
        }

        public Criteria andWaterpriceIsNull() {
            addCriterion("WaterPrice is null");
            return this;
        }

        public Criteria andWaterpriceIsNotNull() {
            addCriterion("WaterPrice is not null");
            return this;
        }

        public Criteria andWaterpriceEqualTo(BigDecimal value) {
            addCriterion("WaterPrice =", value, "waterprice");
            return this;
        }

        public Criteria andWaterpriceNotEqualTo(BigDecimal value) {
            addCriterion("WaterPrice <>", value, "waterprice");
            return this;
        }

        public Criteria andWaterpriceGreaterThan(BigDecimal value) {
            addCriterion("WaterPrice >", value, "waterprice");
            return this;
        }

        public Criteria andWaterpriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("WaterPrice >=", value, "waterprice");
            return this;
        }

        public Criteria andWaterpriceLessThan(BigDecimal value) {
            addCriterion("WaterPrice <", value, "waterprice");
            return this;
        }

        public Criteria andWaterpriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("WaterPrice <=", value, "waterprice");
            return this;
        }

        public Criteria andWaterpriceIn(List values) {
            addCriterion("WaterPrice in", values, "waterprice");
            return this;
        }

        public Criteria andWaterpriceNotIn(List values) {
            addCriterion("WaterPrice not in", values, "waterprice");
            return this;
        }

        public Criteria andWaterpriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WaterPrice between", value1, value2, "waterprice");
            return this;
        }

        public Criteria andWaterpriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WaterPrice not between", value1, value2, "waterprice");
            return this;
        }

        public Criteria andWateramountIsNull() {
            addCriterion("WaterAmount is null");
            return this;
        }

        public Criteria andWateramountIsNotNull() {
            addCriterion("WaterAmount is not null");
            return this;
        }

        public Criteria andWateramountEqualTo(BigDecimal value) {
            addCriterion("WaterAmount =", value, "wateramount");
            return this;
        }

        public Criteria andWateramountNotEqualTo(BigDecimal value) {
            addCriterion("WaterAmount <>", value, "wateramount");
            return this;
        }

        public Criteria andWateramountGreaterThan(BigDecimal value) {
            addCriterion("WaterAmount >", value, "wateramount");
            return this;
        }

        public Criteria andWateramountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("WaterAmount >=", value, "wateramount");
            return this;
        }

        public Criteria andWateramountLessThan(BigDecimal value) {
            addCriterion("WaterAmount <", value, "wateramount");
            return this;
        }

        public Criteria andWateramountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("WaterAmount <=", value, "wateramount");
            return this;
        }

        public Criteria andWateramountIn(List values) {
            addCriterion("WaterAmount in", values, "wateramount");
            return this;
        }

        public Criteria andWateramountNotIn(List values) {
            addCriterion("WaterAmount not in", values, "wateramount");
            return this;
        }

        public Criteria andWateramountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WaterAmount between", value1, value2, "wateramount");
            return this;
        }

        public Criteria andWateramountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WaterAmount not between", value1, value2, "wateramount");
            return this;
        }

        public Criteria andDrainagepriceIsNull() {
            addCriterion("DrainagePrice is null");
            return this;
        }

        public Criteria andDrainagepriceIsNotNull() {
            addCriterion("DrainagePrice is not null");
            return this;
        }

        public Criteria andDrainagepriceEqualTo(BigDecimal value) {
            addCriterion("DrainagePrice =", value, "drainageprice");
            return this;
        }

        public Criteria andDrainagepriceNotEqualTo(BigDecimal value) {
            addCriterion("DrainagePrice <>", value, "drainageprice");
            return this;
        }

        public Criteria andDrainagepriceGreaterThan(BigDecimal value) {
            addCriterion("DrainagePrice >", value, "drainageprice");
            return this;
        }

        public Criteria andDrainagepriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("DrainagePrice >=", value, "drainageprice");
            return this;
        }

        public Criteria andDrainagepriceLessThan(BigDecimal value) {
            addCriterion("DrainagePrice <", value, "drainageprice");
            return this;
        }

        public Criteria andDrainagepriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("DrainagePrice <=", value, "drainageprice");
            return this;
        }

        public Criteria andDrainagepriceIn(List values) {
            addCriterion("DrainagePrice in", values, "drainageprice");
            return this;
        }

        public Criteria andDrainagepriceNotIn(List values) {
            addCriterion("DrainagePrice not in", values, "drainageprice");
            return this;
        }

        public Criteria andDrainagepriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DrainagePrice between", value1, value2, "drainageprice");
            return this;
        }

        public Criteria andDrainagepriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DrainagePrice not between", value1, value2, "drainageprice");
            return this;
        }

        public Criteria andDrainageformulaIsNull() {
            addCriterion("DrainageFormula is null");
            return this;
        }

        public Criteria andDrainageformulaIsNotNull() {
            addCriterion("DrainageFormula is not null");
            return this;
        }

        public Criteria andDrainageformulaEqualTo(String value) {
            addCriterion("DrainageFormula =", value, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaNotEqualTo(String value) {
            addCriterion("DrainageFormula <>", value, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaGreaterThan(String value) {
            addCriterion("DrainageFormula >", value, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaGreaterThanOrEqualTo(String value) {
            addCriterion("DrainageFormula >=", value, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaLessThan(String value) {
            addCriterion("DrainageFormula <", value, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaLessThanOrEqualTo(String value) {
            addCriterion("DrainageFormula <=", value, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaLike(String value) {
            addCriterion("DrainageFormula like", value, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaNotLike(String value) {
            addCriterion("DrainageFormula not like", value, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaIn(List values) {
            addCriterion("DrainageFormula in", values, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaNotIn(List values) {
            addCriterion("DrainageFormula not in", values, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaBetween(String value1, String value2) {
            addCriterion("DrainageFormula between", value1, value2, "drainageformula");
            return this;
        }

        public Criteria andDrainageformulaNotBetween(String value1, String value2) {
            addCriterion("DrainageFormula not between", value1, value2, "drainageformula");
            return this;
        }

        public Criteria andDrainageamountIsNull() {
            addCriterion("DrainageAmount is null");
            return this;
        }

        public Criteria andDrainageamountIsNotNull() {
            addCriterion("DrainageAmount is not null");
            return this;
        }

        public Criteria andDrainageamountEqualTo(BigDecimal value) {
            addCriterion("DrainageAmount =", value, "drainageamount");
            return this;
        }

        public Criteria andDrainageamountNotEqualTo(BigDecimal value) {
            addCriterion("DrainageAmount <>", value, "drainageamount");
            return this;
        }

        public Criteria andDrainageamountGreaterThan(BigDecimal value) {
            addCriterion("DrainageAmount >", value, "drainageamount");
            return this;
        }

        public Criteria andDrainageamountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("DrainageAmount >=", value, "drainageamount");
            return this;
        }

        public Criteria andDrainageamountLessThan(BigDecimal value) {
            addCriterion("DrainageAmount <", value, "drainageamount");
            return this;
        }

        public Criteria andDrainageamountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("DrainageAmount <=", value, "drainageamount");
            return this;
        }

        public Criteria andDrainageamountIn(List values) {
            addCriterion("DrainageAmount in", values, "drainageamount");
            return this;
        }

        public Criteria andDrainageamountNotIn(List values) {
            addCriterion("DrainageAmount not in", values, "drainageamount");
            return this;
        }

        public Criteria andDrainageamountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DrainageAmount between", value1, value2, "drainageamount");
            return this;
        }

        public Criteria andDrainageamountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DrainageAmount not between", value1, value2, "drainageamount");
            return this;
        }
    }
}