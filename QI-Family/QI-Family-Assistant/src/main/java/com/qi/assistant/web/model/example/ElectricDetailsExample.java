package com.qi.assistant.web.model.example;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ElectricDetailsExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    public ElectricDetailsExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    protected ElectricDetailsExample(ElectricDetailsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_family_electric_details
     *
     * @ibatorgenerated Thu Aug 11 12:15:34 GMT+08:00 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andGuidIsNull() {
            addCriterion("Guid is null");
            return this;
        }

        public Criteria andGuidIsNotNull() {
            addCriterion("Guid is not null");
            return this;
        }

        public Criteria andGuidEqualTo(Long value) {
            addCriterion("Guid =", value, "guid");
            return this;
        }

        public Criteria andGuidNotEqualTo(Long value) {
            addCriterion("Guid <>", value, "guid");
            return this;
        }

        public Criteria andGuidGreaterThan(Long value) {
            addCriterion("Guid >", value, "guid");
            return this;
        }

        public Criteria andGuidGreaterThanOrEqualTo(Long value) {
            addCriterion("Guid >=", value, "guid");
            return this;
        }

        public Criteria andGuidLessThan(Long value) {
            addCriterion("Guid <", value, "guid");
            return this;
        }

        public Criteria andGuidLessThanOrEqualTo(Long value) {
            addCriterion("Guid <=", value, "guid");
            return this;
        }

        public Criteria andGuidIn(List values) {
            addCriterion("Guid in", values, "guid");
            return this;
        }

        public Criteria andGuidNotIn(List values) {
            addCriterion("Guid not in", values, "guid");
            return this;
        }

        public Criteria andGuidBetween(Long value1, Long value2) {
            addCriterion("Guid between", value1, value2, "guid");
            return this;
        }

        public Criteria andGuidNotBetween(Long value1, Long value2) {
            addCriterion("Guid not between", value1, value2, "guid");
            return this;
        }

        public Criteria andElectricguidIsNull() {
            addCriterion("ElectricGuid is null");
            return this;
        }

        public Criteria andElectricguidIsNotNull() {
            addCriterion("ElectricGuid is not null");
            return this;
        }

        public Criteria andElectricguidEqualTo(Long value) {
            addCriterion("ElectricGuid =", value, "electricguid");
            return this;
        }

        public Criteria andElectricguidNotEqualTo(Long value) {
            addCriterion("ElectricGuid <>", value, "electricguid");
            return this;
        }

        public Criteria andElectricguidGreaterThan(Long value) {
            addCriterion("ElectricGuid >", value, "electricguid");
            return this;
        }

        public Criteria andElectricguidGreaterThanOrEqualTo(Long value) {
            addCriterion("ElectricGuid >=", value, "electricguid");
            return this;
        }

        public Criteria andElectricguidLessThan(Long value) {
            addCriterion("ElectricGuid <", value, "electricguid");
            return this;
        }

        public Criteria andElectricguidLessThanOrEqualTo(Long value) {
            addCriterion("ElectricGuid <=", value, "electricguid");
            return this;
        }

        public Criteria andElectricguidIn(List values) {
            addCriterion("ElectricGuid in", values, "electricguid");
            return this;
        }

        public Criteria andElectricguidNotIn(List values) {
            addCriterion("ElectricGuid not in", values, "electricguid");
            return this;
        }

        public Criteria andElectricguidBetween(Long value1, Long value2) {
            addCriterion("ElectricGuid between", value1, value2, "electricguid");
            return this;
        }

        public Criteria andElectricguidNotBetween(Long value1, Long value2) {
            addCriterion("ElectricGuid not between", value1, value2, "electricguid");
            return this;
        }

        public Criteria andGradeIsNull() {
            addCriterion("Grade is null");
            return this;
        }

        public Criteria andGradeIsNotNull() {
            addCriterion("Grade is not null");
            return this;
        }

        public Criteria andGradeEqualTo(Integer value) {
            addCriterion("Grade =", value, "grade");
            return this;
        }

        public Criteria andGradeNotEqualTo(Integer value) {
            addCriterion("Grade <>", value, "grade");
            return this;
        }

        public Criteria andGradeGreaterThan(Integer value) {
            addCriterion("Grade >", value, "grade");
            return this;
        }

        public Criteria andGradeGreaterThanOrEqualTo(Integer value) {
            addCriterion("Grade >=", value, "grade");
            return this;
        }

        public Criteria andGradeLessThan(Integer value) {
            addCriterion("Grade <", value, "grade");
            return this;
        }

        public Criteria andGradeLessThanOrEqualTo(Integer value) {
            addCriterion("Grade <=", value, "grade");
            return this;
        }

        public Criteria andGradeIn(List values) {
            addCriterion("Grade in", values, "grade");
            return this;
        }

        public Criteria andGradeNotIn(List values) {
            addCriterion("Grade not in", values, "grade");
            return this;
        }

        public Criteria andGradeBetween(Integer value1, Integer value2) {
            addCriterion("Grade between", value1, value2, "grade");
            return this;
        }

        public Criteria andGradeNotBetween(Integer value1, Integer value2) {
            addCriterion("Grade not between", value1, value2, "grade");
            return this;
        }

        public Criteria andPeakrateIsNull() {
            addCriterion("PeakRate is null");
            return this;
        }

        public Criteria andPeakrateIsNotNull() {
            addCriterion("PeakRate is not null");
            return this;
        }

        public Criteria andPeakrateEqualTo(Integer value) {
            addCriterion("PeakRate =", value, "peakrate");
            return this;
        }

        public Criteria andPeakrateNotEqualTo(Integer value) {
            addCriterion("PeakRate <>", value, "peakrate");
            return this;
        }

        public Criteria andPeakrateGreaterThan(Integer value) {
            addCriterion("PeakRate >", value, "peakrate");
            return this;
        }

        public Criteria andPeakrateGreaterThanOrEqualTo(Integer value) {
            addCriterion("PeakRate >=", value, "peakrate");
            return this;
        }

        public Criteria andPeakrateLessThan(Integer value) {
            addCriterion("PeakRate <", value, "peakrate");
            return this;
        }

        public Criteria andPeakrateLessThanOrEqualTo(Integer value) {
            addCriterion("PeakRate <=", value, "peakrate");
            return this;
        }

        public Criteria andPeakrateIn(List values) {
            addCriterion("PeakRate in", values, "peakrate");
            return this;
        }

        public Criteria andPeakrateNotIn(List values) {
            addCriterion("PeakRate not in", values, "peakrate");
            return this;
        }

        public Criteria andPeakrateBetween(Integer value1, Integer value2) {
            addCriterion("PeakRate between", value1, value2, "peakrate");
            return this;
        }

        public Criteria andPeakrateNotBetween(Integer value1, Integer value2) {
            addCriterion("PeakRate not between", value1, value2, "peakrate");
            return this;
        }

        public Criteria andPeakquantityIsNull() {
            addCriterion("PeakQuantity is null");
            return this;
        }

        public Criteria andPeakquantityIsNotNull() {
            addCriterion("PeakQuantity is not null");
            return this;
        }

        public Criteria andPeakquantityEqualTo(Integer value) {
            addCriterion("PeakQuantity =", value, "peakquantity");
            return this;
        }

        public Criteria andPeakquantityNotEqualTo(Integer value) {
            addCriterion("PeakQuantity <>", value, "peakquantity");
            return this;
        }

        public Criteria andPeakquantityGreaterThan(Integer value) {
            addCriterion("PeakQuantity >", value, "peakquantity");
            return this;
        }

        public Criteria andPeakquantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("PeakQuantity >=", value, "peakquantity");
            return this;
        }

        public Criteria andPeakquantityLessThan(Integer value) {
            addCriterion("PeakQuantity <", value, "peakquantity");
            return this;
        }

        public Criteria andPeakquantityLessThanOrEqualTo(Integer value) {
            addCriterion("PeakQuantity <=", value, "peakquantity");
            return this;
        }

        public Criteria andPeakquantityIn(List values) {
            addCriterion("PeakQuantity in", values, "peakquantity");
            return this;
        }

        public Criteria andPeakquantityNotIn(List values) {
            addCriterion("PeakQuantity not in", values, "peakquantity");
            return this;
        }

        public Criteria andPeakquantityBetween(Integer value1, Integer value2) {
            addCriterion("PeakQuantity between", value1, value2, "peakquantity");
            return this;
        }

        public Criteria andPeakquantityNotBetween(Integer value1, Integer value2) {
            addCriterion("PeakQuantity not between", value1, value2, "peakquantity");
            return this;
        }

        public Criteria andPeakpriceIsNull() {
            addCriterion("PeakPrice is null");
            return this;
        }

        public Criteria andPeakpriceIsNotNull() {
            addCriterion("PeakPrice is not null");
            return this;
        }

        public Criteria andPeakpriceEqualTo(BigDecimal value) {
            addCriterion("PeakPrice =", value, "peakprice");
            return this;
        }

        public Criteria andPeakpriceNotEqualTo(BigDecimal value) {
            addCriterion("PeakPrice <>", value, "peakprice");
            return this;
        }

        public Criteria andPeakpriceGreaterThan(BigDecimal value) {
            addCriterion("PeakPrice >", value, "peakprice");
            return this;
        }

        public Criteria andPeakpriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PeakPrice >=", value, "peakprice");
            return this;
        }

        public Criteria andPeakpriceLessThan(BigDecimal value) {
            addCriterion("PeakPrice <", value, "peakprice");
            return this;
        }

        public Criteria andPeakpriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PeakPrice <=", value, "peakprice");
            return this;
        }

        public Criteria andPeakpriceIn(List values) {
            addCriterion("PeakPrice in", values, "peakprice");
            return this;
        }

        public Criteria andPeakpriceNotIn(List values) {
            addCriterion("PeakPrice not in", values, "peakprice");
            return this;
        }

        public Criteria andPeakpriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PeakPrice between", value1, value2, "peakprice");
            return this;
        }

        public Criteria andPeakpriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PeakPrice not between", value1, value2, "peakprice");
            return this;
        }

        public Criteria andPeakamountIsNull() {
            addCriterion("PeakAmount is null");
            return this;
        }

        public Criteria andPeakamountIsNotNull() {
            addCriterion("PeakAmount is not null");
            return this;
        }

        public Criteria andPeakamountEqualTo(BigDecimal value) {
            addCriterion("PeakAmount =", value, "peakamount");
            return this;
        }

        public Criteria andPeakamountNotEqualTo(BigDecimal value) {
            addCriterion("PeakAmount <>", value, "peakamount");
            return this;
        }

        public Criteria andPeakamountGreaterThan(BigDecimal value) {
            addCriterion("PeakAmount >", value, "peakamount");
            return this;
        }

        public Criteria andPeakamountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PeakAmount >=", value, "peakamount");
            return this;
        }

        public Criteria andPeakamountLessThan(BigDecimal value) {
            addCriterion("PeakAmount <", value, "peakamount");
            return this;
        }

        public Criteria andPeakamountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PeakAmount <=", value, "peakamount");
            return this;
        }

        public Criteria andPeakamountIn(List values) {
            addCriterion("PeakAmount in", values, "peakamount");
            return this;
        }

        public Criteria andPeakamountNotIn(List values) {
            addCriterion("PeakAmount not in", values, "peakamount");
            return this;
        }

        public Criteria andPeakamountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PeakAmount between", value1, value2, "peakamount");
            return this;
        }

        public Criteria andPeakamountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PeakAmount not between", value1, value2, "peakamount");
            return this;
        }

        public Criteria andFlatrateIsNull() {
            addCriterion("FlatRate is null");
            return this;
        }

        public Criteria andFlatrateIsNotNull() {
            addCriterion("FlatRate is not null");
            return this;
        }

        public Criteria andFlatrateEqualTo(Integer value) {
            addCriterion("FlatRate =", value, "flatrate");
            return this;
        }

        public Criteria andFlatrateNotEqualTo(Integer value) {
            addCriterion("FlatRate <>", value, "flatrate");
            return this;
        }

        public Criteria andFlatrateGreaterThan(Integer value) {
            addCriterion("FlatRate >", value, "flatrate");
            return this;
        }

        public Criteria andFlatrateGreaterThanOrEqualTo(Integer value) {
            addCriterion("FlatRate >=", value, "flatrate");
            return this;
        }

        public Criteria andFlatrateLessThan(Integer value) {
            addCriterion("FlatRate <", value, "flatrate");
            return this;
        }

        public Criteria andFlatrateLessThanOrEqualTo(Integer value) {
            addCriterion("FlatRate <=", value, "flatrate");
            return this;
        }

        public Criteria andFlatrateIn(List values) {
            addCriterion("FlatRate in", values, "flatrate");
            return this;
        }

        public Criteria andFlatrateNotIn(List values) {
            addCriterion("FlatRate not in", values, "flatrate");
            return this;
        }

        public Criteria andFlatrateBetween(Integer value1, Integer value2) {
            addCriterion("FlatRate between", value1, value2, "flatrate");
            return this;
        }

        public Criteria andFlatrateNotBetween(Integer value1, Integer value2) {
            addCriterion("FlatRate not between", value1, value2, "flatrate");
            return this;
        }

        public Criteria andFlatquantityIsNull() {
            addCriterion("FlatQuantity is null");
            return this;
        }

        public Criteria andFlatquantityIsNotNull() {
            addCriterion("FlatQuantity is not null");
            return this;
        }

        public Criteria andFlatquantityEqualTo(Integer value) {
            addCriterion("FlatQuantity =", value, "flatquantity");
            return this;
        }

        public Criteria andFlatquantityNotEqualTo(Integer value) {
            addCriterion("FlatQuantity <>", value, "flatquantity");
            return this;
        }

        public Criteria andFlatquantityGreaterThan(Integer value) {
            addCriterion("FlatQuantity >", value, "flatquantity");
            return this;
        }

        public Criteria andFlatquantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("FlatQuantity >=", value, "flatquantity");
            return this;
        }

        public Criteria andFlatquantityLessThan(Integer value) {
            addCriterion("FlatQuantity <", value, "flatquantity");
            return this;
        }

        public Criteria andFlatquantityLessThanOrEqualTo(Integer value) {
            addCriterion("FlatQuantity <=", value, "flatquantity");
            return this;
        }

        public Criteria andFlatquantityIn(List values) {
            addCriterion("FlatQuantity in", values, "flatquantity");
            return this;
        }

        public Criteria andFlatquantityNotIn(List values) {
            addCriterion("FlatQuantity not in", values, "flatquantity");
            return this;
        }

        public Criteria andFlatquantityBetween(Integer value1, Integer value2) {
            addCriterion("FlatQuantity between", value1, value2, "flatquantity");
            return this;
        }

        public Criteria andFlatquantityNotBetween(Integer value1, Integer value2) {
            addCriterion("FlatQuantity not between", value1, value2, "flatquantity");
            return this;
        }

        public Criteria andFlatpriceIsNull() {
            addCriterion("FlatPrice is null");
            return this;
        }

        public Criteria andFlatpriceIsNotNull() {
            addCriterion("FlatPrice is not null");
            return this;
        }

        public Criteria andFlatpriceEqualTo(BigDecimal value) {
            addCriterion("FlatPrice =", value, "flatprice");
            return this;
        }

        public Criteria andFlatpriceNotEqualTo(BigDecimal value) {
            addCriterion("FlatPrice <>", value, "flatprice");
            return this;
        }

        public Criteria andFlatpriceGreaterThan(BigDecimal value) {
            addCriterion("FlatPrice >", value, "flatprice");
            return this;
        }

        public Criteria andFlatpriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FlatPrice >=", value, "flatprice");
            return this;
        }

        public Criteria andFlatpriceLessThan(BigDecimal value) {
            addCriterion("FlatPrice <", value, "flatprice");
            return this;
        }

        public Criteria andFlatpriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FlatPrice <=", value, "flatprice");
            return this;
        }

        public Criteria andFlatpriceIn(List values) {
            addCriterion("FlatPrice in", values, "flatprice");
            return this;
        }

        public Criteria andFlatpriceNotIn(List values) {
            addCriterion("FlatPrice not in", values, "flatprice");
            return this;
        }

        public Criteria andFlatpriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FlatPrice between", value1, value2, "flatprice");
            return this;
        }

        public Criteria andFlatpriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FlatPrice not between", value1, value2, "flatprice");
            return this;
        }

        public Criteria andFlatamountIsNull() {
            addCriterion("FlatAmount is null");
            return this;
        }

        public Criteria andFlatamountIsNotNull() {
            addCriterion("FlatAmount is not null");
            return this;
        }

        public Criteria andFlatamountEqualTo(BigDecimal value) {
            addCriterion("FlatAmount =", value, "flatamount");
            return this;
        }

        public Criteria andFlatamountNotEqualTo(BigDecimal value) {
            addCriterion("FlatAmount <>", value, "flatamount");
            return this;
        }

        public Criteria andFlatamountGreaterThan(BigDecimal value) {
            addCriterion("FlatAmount >", value, "flatamount");
            return this;
        }

        public Criteria andFlatamountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FlatAmount >=", value, "flatamount");
            return this;
        }

        public Criteria andFlatamountLessThan(BigDecimal value) {
            addCriterion("FlatAmount <", value, "flatamount");
            return this;
        }

        public Criteria andFlatamountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FlatAmount <=", value, "flatamount");
            return this;
        }

        public Criteria andFlatamountIn(List values) {
            addCriterion("FlatAmount in", values, "flatamount");
            return this;
        }

        public Criteria andFlatamountNotIn(List values) {
            addCriterion("FlatAmount not in", values, "flatamount");
            return this;
        }

        public Criteria andFlatamountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FlatAmount between", value1, value2, "flatamount");
            return this;
        }

        public Criteria andFlatamountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FlatAmount not between", value1, value2, "flatamount");
            return this;
        }
    }
}